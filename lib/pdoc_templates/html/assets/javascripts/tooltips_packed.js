if(typeof MooTools=="undefined"){throw"MooTools must be loaded in order to use ToolTips!"}if(typeof Tips=="undefined"){throw"MooTools Tips must be loaded in order to use ToolTips!"}if(typeof Bounga=="undefined"){Bounga={}}Bounga.ToolTips=new Class({Implements:[Options],boundElement:null,tips:null,elements:".tooltip",options:{url:null,showDelay:100,hideDelay:100,className:null,offsets:{x:16,y:16},fixed:false,onShow:null,onHide:null},initialize:function(C,A){this.setOptions(A);if($chk(C)){this.elements=C}var B=$$(this.elements);if(this.options.url!=null){B.each(function(D){var F=D.get("html");D.store("tip:title",F);var E=$H({word:F}).toQueryString();new Request({url:this.options.url,method:"get",data:E,onSuccess:function(G){D.store("tip:text",G)},onFailure:function(G){if(console){console.log("Bounga.ToolTips error:\n"+G.status+": "+G.statusText+"\n"+G.responseText)}}}).send()})}this.tips=new Tips(this.elements,{showDelay:this.options.showDelay,hideDelay:this.options.hideDelay,className:this.options.className,offsets:this.options.offsets,fixed:this.options.fixed});if(this.options.onShow!=null){this.tips.addEvent("show",this.options.onShow)}if(this.options.onHide!=null){this.tips.addEvent("hide",this.options.onHide)}return this},detach:function(){this.tips.detach(this.elements)},attach:function(){this.tips.attach(this.elements)}});